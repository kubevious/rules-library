version: "1.0"

stages:
  - "clone"
  - "prepare"
  - "test"

steps:

  init:
    title: Init
    stage: clone
    image: codefresh/cli
    shell: bash
    commands:
      - cf_export GITHUB_TOKEN=$(codefresh get context github --decrypt -o yaml | yq -y .spec.data.auth.password)
      - export PRODUCT_NAME=${{CF_REPO_NAME}}
      - cf_export PRODUCT_NAME=${PRODUCT_NAME}
      - cf_export MAIN_REPO_PATH=/codefresh/volume/repo.git
      - export DEMOS_REPO_NAME=demos
      - cf_export DEMOS_REPO_NAME=${DEMOS_REPO_NAME}
      - cf_export DEMOS_REPO_PATH=/codefresh/volume/${DEMOS_REPO_NAME}.git
      - cf_export SAMPLES_PATH=/codefresh/volume/samples
      - 'echo "Repo: ${{CF_REPO_NAME}}"'
      - 'echo "Branch: ${{CF_BRANCH}}"'
      - 'echo "Revision: ${{CF_REVISION}}"'
      - 'echo "Author: ${{CF_COMMIT_AUTHOR}}"'
      - 'echo "Message: ${{CF_COMMIT_MESSAGE}}"'
      
  clone:
    title: Clone Repo
    stage: clone
    image: 'alpine/git:latest'
    working_directory: "/codefresh/volume"
    commands:
      - pwd
      - ls -la
      - rm -rf ${{MAIN_REPO_PATH}}
      - 'git clone https://${{CF_REPO_OWNER}}:${{GITHUB_TOKEN}}@github.com/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}.git ${{MAIN_REPO_PATH}}'
      - ls -la
      - cd ${{MAIN_REPO_PATH}}
      - git reset --hard ${{CF_REVISION}}
      - ls -la

  clone_demos:
    title: Clone Demos Repo
    stage: clone
    image: 'alpine/git:latest'
    working_directory: "/codefresh/volume"
    commands:
      - pwd
      - ls -la
      - rm -rf ${{DEMOS_REPO_PATH}}
      - 'git clone https://${{CF_REPO_OWNER}}:${{GITHUB_TOKEN}}@github.com/${{CF_REPO_OWNER}}/${{DEMOS_REPO_NAME}}.git ${{DEMOS_REPO_PATH}}'
      - ls -la
      - cd ${{DEMOS_REPO_PATH}}
      - ls -la

    output_info:
      title: Output Info
      stage: prepare
      image: 'kubevious/cli:latest'
      commands:
        - kubevious --version

  # TESTS
  parallel_tests:
    type: parallel
    stage: test
    steps:

      validate_argo_rollout_sample:
        title: Validate Argo Rollout Sample
        image: 'kubevious/cli:latest'
        working_directory: ${{DEMOS_REPO_PATH}}
        commands:
          - kubevious --version
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{DEMOS_REPO_PATH}}/crds/argo-rollouts/crds.yaml ${{DEMOS_REPO_PATH}}/guard/40-argo-rollout

      validate_traefik_chart:
        title: Validate Traefik Chart
        image: 'kubevious/cli:latest'
        working_directory: ${{SAMPLES_PATH}}
        commands:    
          - helm version
          - helm repo add traefik https://traefik.github.io/charts
          - helm template traefik/traefik --include-crds > traefik.yaml
          - kubevious lint traefik.yaml
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml traefik.yaml
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml @helm@traefik/traefik@crds=include

      validate_prometheus_chart:
        title: Validate Prometheus Chart
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{SAMPLES_PATH}}
        commands:    
          - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          - kubevious lint @helm@prometheus-community/prometheus
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml @helm@prometheus-community/prometheus

      validate_grafana_chart:
        title: Validate Prometheus Chart
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{SAMPLES_PATH}}
        commands:    
          - helm repo add grafana https://grafana.github.io/helm-charts
          - helm template grafana/grafana --namespace grafana --set persistence.enabled=true > grafana.yaml
          - kubevious lint grafana.yaml
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml grafana.yaml
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml @helm@grafana/grafana@namespace=grafana@set=persistence.enabled=true
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml @helm@grafana/grafana@namespace=grafana@set=persistence.enabled=false

      validate_kubeflow:
        title: Validate Kubeflow
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{SAMPLES_PATH}}
        commands:
          - ls -la
          - rm -rf kubeflow-pipelines.git
          - git clone https://github.com/kubeflow/pipelines.git kubeflow-pipelines.git
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml kubeflow-pipelines.git/manifests/kustomize/cluster-scoped-resources kubeflow-pipelines.git/manifests/kustomize/env/platform-agnostic ${{DEMOS_REPO_PATH}}/mocks/kubeflow/webhook-server-tls.yaml
          
      validate_istio:
        title: Validate Istio Chart
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{DEMOS_REPO_PATH}}/guard/10-istio-bookinfo
        commands:
          - ls -la
          - echo "Validating Istio Classic..."
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml bookinfo.yaml istio-classic/bookinfo-gateway.yaml istio-classic/destination-rule-all.yaml https://raw.githubusercontent.com/istio/istio/master/manifests/charts/base/crds/crd-all.gen.yaml 
          - echo "Validating Istio Gateway API..."
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml bookinfo.yaml gateway-api/mock-gateway-class.yaml gateway-api/bookinfo-gateway.yaml gateway-api/bookinfo-versions.yaml ${{DEMOS_REPO_PATH}}/mocks/istio/secret-gateway-api-admission.yaml ${{DEMOS_REPO_PATH}}/crds/gateway-api/standard.yaml

      validate_hipster_simple:
        title: Validate Hipster Chart
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{DEMOS_REPO_PATH}}/guard/01-hipster-shop
        commands:
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml hipster-chart

      validate_hipster_network_policies:
        title: Validate Hipster Network Policies
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{DEMOS_REPO_PATH}}/guard/01-hipster-shop
        commands:
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml hipster-chart network-policies-chart

      validate_hipster_network-policies:
        title: Validate Hipster Istio
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{DEMOS_REPO_PATH}}/guard/01-hipster-shop
        commands:
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml hipster-chart istio-chart https://raw.githubusercontent.com/istio/istio/master/manifests/charts/base/crds/crd-all.gen.yaml

      validate_voter:
        title: Validate Voter App
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{DEMOS_REPO_PATH}}/guard/02-voter-app
        commands:
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml voter-chart

      validate_ingresses:
        title: Validate Ingresses
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{DEMOS_REPO_PATH}}/guard/11-ingresses
        commands:
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml .  --k8s-version 1.20

      validate_gcp_config_connector_sql:
        title: Validate GCP Config Connector SQL
        stage: test
        image: 'kubevious/cli:latest'
        working_directory: ${{DEMOS_REPO_PATH}}/guard/60-gcp-config-connector/sql
        commands:
          - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml . ${{DEMOS_REPO_PATH}}/crds/gcp-config-connector/sql ${{DEMOS_REPO_PATH}}/crds/sealed-secrets --k8s-version 1.25