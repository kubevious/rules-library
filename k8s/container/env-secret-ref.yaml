apiVersion: kubevious.io/v1alpha1
kind: ClusterRule
metadata:
  name: container-env-secret-ref
spec:
  summary: |
    Validate ContainerSpec environment variable Secret reference.
  target: |
    Shortcut("ContainerSpec")
  categories:
    - k8s
    - container
    - environment-variable
    - secret
    - reference
  rule: |
    for(const env of config.spec?.env ?? [])
    {
      if (env.valueFrom)
      {
        if (env.valueFrom.secretKeyRef)
        {
          if (env.valueFrom.secretKeyRef.name)
          {
            const secretItem = Shortcut("Secret", env.valueFrom.secretKeyRef.name)
                                  .single();
            if (!secretItem)
            {
              if (!env.valueFrom.secretKeyRef.optional)
              {
                error(`Could not find Secret ${env.valueFrom.secretKeyRef.name} referenced in env variable ${env.name}`);
              }
            }
            else
            {
              const dataObj = secretItem.config.data ?? {};
              if (dataObj[env.valueFrom.secretKeyRef.key] === undefined)
              {
                const stringDataObj = secretItem.config.stringData ?? {};
                if (stringDataObj[env.valueFrom.secretKeyRef.key] === undefined)
                {
                  if (!env.valueFrom.secretKeyRef.optional)
                  {
                    error(`Could not find data key ${env.valueFrom.secretKeyRef.key} in Secret ${env.valueFrom.secretKeyRef.name} referenced in env variable ${env.name}, DATA: ${JSON.stringify(stringDataObj)}`);
                  }
                }
              }
            }
          }
          else
          {
            error(`Secret name not set in env.valueFrom.secretKeyRef`);
          }
        }
      }
    }